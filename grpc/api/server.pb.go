// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/lightbrotherV/gin-protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListenResourceReq struct {
	// 服务端id
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListenResourceReq) Reset()         { *m = ListenResourceReq{} }
func (m *ListenResourceReq) String() string { return proto.CompactTextString(m) }
func (*ListenResourceReq) ProtoMessage()    {}
func (*ListenResourceReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{0}
}

func (m *ListenResourceReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenResourceReq.Unmarshal(m, b)
}
func (m *ListenResourceReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenResourceReq.Marshal(b, m, deterministic)
}
func (m *ListenResourceReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenResourceReq.Merge(m, src)
}
func (m *ListenResourceReq) XXX_Size() int {
	return xxx_messageInfo_ListenResourceReq.Size(m)
}
func (m *ListenResourceReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenResourceReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListenResourceReq proto.InternalMessageInfo

func (m *ListenResourceReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ListenResourceResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListenResourceResp) Reset()         { *m = ListenResourceResp{} }
func (m *ListenResourceResp) String() string { return proto.CompactTextString(m) }
func (*ListenResourceResp) ProtoMessage()    {}
func (*ListenResourceResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{1}
}

func (m *ListenResourceResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenResourceResp.Unmarshal(m, b)
}
func (m *ListenResourceResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenResourceResp.Marshal(b, m, deterministic)
}
func (m *ListenResourceResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenResourceResp.Merge(m, src)
}
func (m *ListenResourceResp) XXX_Size() int {
	return xxx_messageInfo_ListenResourceResp.Size(m)
}
func (m *ListenResourceResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenResourceResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListenResourceResp proto.InternalMessageInfo

type ServerInteractionReq struct {
	// 服务端id
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerInteractionReq) Reset()         { *m = ServerInteractionReq{} }
func (m *ServerInteractionReq) String() string { return proto.CompactTextString(m) }
func (*ServerInteractionReq) ProtoMessage()    {}
func (*ServerInteractionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{2}
}

func (m *ServerInteractionReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerInteractionReq.Unmarshal(m, b)
}
func (m *ServerInteractionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerInteractionReq.Marshal(b, m, deterministic)
}
func (m *ServerInteractionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerInteractionReq.Merge(m, src)
}
func (m *ServerInteractionReq) XXX_Size() int {
	return xxx_messageInfo_ServerInteractionReq.Size(m)
}
func (m *ServerInteractionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerInteractionReq.DiscardUnknown(m)
}

var xxx_messageInfo_ServerInteractionReq proto.InternalMessageInfo

func (m *ServerInteractionReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ServerInteractionResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerInteractionResp) Reset()         { *m = ServerInteractionResp{} }
func (m *ServerInteractionResp) String() string { return proto.CompactTextString(m) }
func (*ServerInteractionResp) ProtoMessage()    {}
func (*ServerInteractionResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{3}
}

func (m *ServerInteractionResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerInteractionResp.Unmarshal(m, b)
}
func (m *ServerInteractionResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerInteractionResp.Marshal(b, m, deterministic)
}
func (m *ServerInteractionResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerInteractionResp.Merge(m, src)
}
func (m *ServerInteractionResp) XXX_Size() int {
	return xxx_messageInfo_ServerInteractionResp.Size(m)
}
func (m *ServerInteractionResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerInteractionResp.DiscardUnknown(m)
}

var xxx_messageInfo_ServerInteractionResp proto.InternalMessageInfo

type ListReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListReq) Reset()         { *m = ListReq{} }
func (m *ListReq) String() string { return proto.CompactTextString(m) }
func (*ListReq) ProtoMessage()    {}
func (*ListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{4}
}

func (m *ListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReq.Unmarshal(m, b)
}
func (m *ListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReq.Marshal(b, m, deterministic)
}
func (m *ListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReq.Merge(m, src)
}
func (m *ListReq) XXX_Size() int {
	return xxx_messageInfo_ListReq.Size(m)
}
func (m *ListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListReq proto.InternalMessageInfo

type ListResp struct {
	// 服务端配置
	List                 []*ListResp_Record `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ListResp) Reset()         { *m = ListResp{} }
func (m *ListResp) String() string { return proto.CompactTextString(m) }
func (*ListResp) ProtoMessage()    {}
func (*ListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{5}
}

func (m *ListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResp.Unmarshal(m, b)
}
func (m *ListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResp.Marshal(b, m, deterministic)
}
func (m *ListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResp.Merge(m, src)
}
func (m *ListResp) XXX_Size() int {
	return xxx_messageInfo_ListResp.Size(m)
}
func (m *ListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListResp proto.InternalMessageInfo

func (m *ListResp) GetList() []*ListResp_Record {
	if m != nil {
		return m.List
	}
	return nil
}

type ListResp_Record struct {
	// 服务端实例id
	EntryId string `protobuf:"bytes,1,opt,name=entryId,json=id,proto3" json:"id,omitempty"`
	// 服务器名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 执行的完整命令
	CmdStr []string `protobuf:"bytes,3,rep,name=cmdStr,json=cmd_str,proto3" json:"cmd_str,omitempty"`
	// 启动服务器端口
	Port int64 `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	// 运行所在工作区间
	RunPath string `protobuf:"bytes,5,opt,name=runPath,json=run_rath,proto3" json:"run_rath,omitempty"`
	// 是否是镜像服务器
	IsMirror bool `protobuf:"varint,6,opt,name=isMirror,json=is_mirror,proto3" json:"is_mirror,omitempty"`
	// 是否启动资源监听器
	IsStartMonitor bool `protobuf:"varint,7,opt,name=isStartMonitor,json=is_start_monitor,proto3" json:"is_start_monitor,omitempty"`
	// 使用内存大小，单位M
	Memory int64 `protobuf:"varint,8,opt,name=memory,proto3" json:"memory,omitempty"`
	// 服务端版本
	Version string `protobuf:"bytes,9,opt,name=version,proto3" json:"version,omitempty"`
	// 服务器模式
	GameType string `protobuf:"bytes,10,opt,name=gameType,json=game_type,proto3" json:"game_type,omitempty"`
	// 启动状态：0.未启动 1.启动  -1.正在启动 -2.正在关闭
	State int64 `protobuf:"varint,11,opt,name=state,proto3" json:"state,omitempty"`
	// 本机的ip
	Ips                  []string `protobuf:"bytes,12,rep,name=ips,proto3" json:"ips,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListResp_Record) Reset()         { *m = ListResp_Record{} }
func (m *ListResp_Record) String() string { return proto.CompactTextString(m) }
func (*ListResp_Record) ProtoMessage()    {}
func (*ListResp_Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{5, 0}
}

func (m *ListResp_Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResp_Record.Unmarshal(m, b)
}
func (m *ListResp_Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResp_Record.Marshal(b, m, deterministic)
}
func (m *ListResp_Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResp_Record.Merge(m, src)
}
func (m *ListResp_Record) XXX_Size() int {
	return xxx_messageInfo_ListResp_Record.Size(m)
}
func (m *ListResp_Record) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResp_Record.DiscardUnknown(m)
}

var xxx_messageInfo_ListResp_Record proto.InternalMessageInfo

func (m *ListResp_Record) GetEntryId() string {
	if m != nil {
		return m.EntryId
	}
	return ""
}

func (m *ListResp_Record) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListResp_Record) GetCmdStr() []string {
	if m != nil {
		return m.CmdStr
	}
	return nil
}

func (m *ListResp_Record) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *ListResp_Record) GetRunPath() string {
	if m != nil {
		return m.RunPath
	}
	return ""
}

func (m *ListResp_Record) GetIsMirror() bool {
	if m != nil {
		return m.IsMirror
	}
	return false
}

func (m *ListResp_Record) GetIsStartMonitor() bool {
	if m != nil {
		return m.IsStartMonitor
	}
	return false
}

func (m *ListResp_Record) GetMemory() int64 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *ListResp_Record) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ListResp_Record) GetGameType() string {
	if m != nil {
		return m.GameType
	}
	return ""
}

func (m *ListResp_Record) GetState() int64 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *ListResp_Record) GetIps() []string {
	if m != nil {
		return m.Ips
	}
	return nil
}

type GetServerStateReq struct {
	// 服务端id
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetServerStateReq) Reset()         { *m = GetServerStateReq{} }
func (m *GetServerStateReq) String() string { return proto.CompactTextString(m) }
func (*GetServerStateReq) ProtoMessage()    {}
func (*GetServerStateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{6}
}

func (m *GetServerStateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServerStateReq.Unmarshal(m, b)
}
func (m *GetServerStateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServerStateReq.Marshal(b, m, deterministic)
}
func (m *GetServerStateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServerStateReq.Merge(m, src)
}
func (m *GetServerStateReq) XXX_Size() int {
	return xxx_messageInfo_GetServerStateReq.Size(m)
}
func (m *GetServerStateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServerStateReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetServerStateReq proto.InternalMessageInfo

func (m *GetServerStateReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetServerStateResp struct {
	// 启动状态：0.未启动 1.启动  -1.正在启动 -2.正在关闭
	State                int64    `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetServerStateResp) Reset()         { *m = GetServerStateResp{} }
func (m *GetServerStateResp) String() string { return proto.CompactTextString(m) }
func (*GetServerStateResp) ProtoMessage()    {}
func (*GetServerStateResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{7}
}

func (m *GetServerStateResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServerStateResp.Unmarshal(m, b)
}
func (m *GetServerStateResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServerStateResp.Marshal(b, m, deterministic)
}
func (m *GetServerStateResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServerStateResp.Merge(m, src)
}
func (m *GetServerStateResp) XXX_Size() int {
	return xxx_messageInfo_GetServerStateResp.Size(m)
}
func (m *GetServerStateResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServerStateResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetServerStateResp proto.InternalMessageInfo

func (m *GetServerStateResp) GetState() int64 {
	if m != nil {
		return m.State
	}
	return 0
}

type DetailReq struct {
	// 服务端id
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DetailReq) Reset()         { *m = DetailReq{} }
func (m *DetailReq) String() string { return proto.CompactTextString(m) }
func (*DetailReq) ProtoMessage()    {}
func (*DetailReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{8}
}

func (m *DetailReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetailReq.Unmarshal(m, b)
}
func (m *DetailReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetailReq.Marshal(b, m, deterministic)
}
func (m *DetailReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetailReq.Merge(m, src)
}
func (m *DetailReq) XXX_Size() int {
	return xxx_messageInfo_DetailReq.Size(m)
}
func (m *DetailReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DetailReq.DiscardUnknown(m)
}

var xxx_messageInfo_DetailReq proto.InternalMessageInfo

func (m *DetailReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DetailResp struct {
	// 服务端实例id
	EntryId string `protobuf:"bytes,1,opt,name=entryId,json=id,proto3" json:"id,omitempty"`
	// 服务器名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 执行的完整命令
	CmdStr []string `protobuf:"bytes,3,rep,name=cmdStr,json=cmd_str,proto3" json:"cmd_str,omitempty"`
	// 启动服务器端口
	Port int64 `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	// 运行所在工作区间
	RunPath string `protobuf:"bytes,5,opt,name=runPath,json=run_rath,proto3" json:"run_rath,omitempty"`
	// 是否是镜像服务器
	IsMirror bool `protobuf:"varint,6,opt,name=isMirror,json=is_mirror,proto3" json:"is_mirror,omitempty"`
	// 是否启动资源监听器
	IsStartMonitor bool `protobuf:"varint,7,opt,name=isStartMonitor,json=is_start_monitor,proto3" json:"is_start_monitor,omitempty"`
	// 使用内存大小，单位M
	Memory int64 `protobuf:"varint,8,opt,name=memory,proto3" json:"memory,omitempty"`
	// 服务端版本
	Version string `protobuf:"bytes,9,opt,name=version,proto3" json:"version,omitempty"`
	// 服务器模式
	GameType string `protobuf:"bytes,10,opt,name=gameType,json=game_type,proto3" json:"game_type,omitempty"`
	// 启动状态：0.未启动 1.启动  -1.正在启动 -2.正在关闭
	State int64 `protobuf:"varint,11,opt,name=state,proto3" json:"state,omitempty"`
	// 本机的ip
	Ips []string `protobuf:"bytes,12,rep,name=ips,proto3" json:"ips,omitempty"`
	// 插件信息
	Pluginfo             []*DetailResp_PluginRecord `protobuf:"bytes,13,rep,name=pluginfo,json=plugin_info,proto3" json:"plugin_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *DetailResp) Reset()         { *m = DetailResp{} }
func (m *DetailResp) String() string { return proto.CompactTextString(m) }
func (*DetailResp) ProtoMessage()    {}
func (*DetailResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{9}
}

func (m *DetailResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetailResp.Unmarshal(m, b)
}
func (m *DetailResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetailResp.Marshal(b, m, deterministic)
}
func (m *DetailResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetailResp.Merge(m, src)
}
func (m *DetailResp) XXX_Size() int {
	return xxx_messageInfo_DetailResp.Size(m)
}
func (m *DetailResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DetailResp.DiscardUnknown(m)
}

var xxx_messageInfo_DetailResp proto.InternalMessageInfo

func (m *DetailResp) GetEntryId() string {
	if m != nil {
		return m.EntryId
	}
	return ""
}

func (m *DetailResp) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DetailResp) GetCmdStr() []string {
	if m != nil {
		return m.CmdStr
	}
	return nil
}

func (m *DetailResp) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *DetailResp) GetRunPath() string {
	if m != nil {
		return m.RunPath
	}
	return ""
}

func (m *DetailResp) GetIsMirror() bool {
	if m != nil {
		return m.IsMirror
	}
	return false
}

func (m *DetailResp) GetIsStartMonitor() bool {
	if m != nil {
		return m.IsStartMonitor
	}
	return false
}

func (m *DetailResp) GetMemory() int64 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *DetailResp) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *DetailResp) GetGameType() string {
	if m != nil {
		return m.GameType
	}
	return ""
}

func (m *DetailResp) GetState() int64 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *DetailResp) GetIps() []string {
	if m != nil {
		return m.Ips
	}
	return nil
}

func (m *DetailResp) GetPluginfo() []*DetailResp_PluginRecord {
	if m != nil {
		return m.Pluginfo
	}
	return nil
}

type DetailResp_PluginRecord struct {
	// 插件名称
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 插件id
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// 是否被禁用
	IsBan bool `protobuf:"varint,3,opt,name=isBan,json=is_ban,proto3" json:"is_ban,omitempty"`
	// 使用命令
	CommandName string `protobuf:"bytes,4,opt,name=commandName,json=command_name,proto3" json:"command_name,omitempty"`
	// 描述
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// 使用帮助
	HelpDescription      string   `protobuf:"bytes,6,opt,name=helpDescription,json=help_description,proto3" json:"help_description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DetailResp_PluginRecord) Reset()         { *m = DetailResp_PluginRecord{} }
func (m *DetailResp_PluginRecord) String() string { return proto.CompactTextString(m) }
func (*DetailResp_PluginRecord) ProtoMessage()    {}
func (*DetailResp_PluginRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{9, 0}
}

func (m *DetailResp_PluginRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetailResp_PluginRecord.Unmarshal(m, b)
}
func (m *DetailResp_PluginRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetailResp_PluginRecord.Marshal(b, m, deterministic)
}
func (m *DetailResp_PluginRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetailResp_PluginRecord.Merge(m, src)
}
func (m *DetailResp_PluginRecord) XXX_Size() int {
	return xxx_messageInfo_DetailResp_PluginRecord.Size(m)
}
func (m *DetailResp_PluginRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_DetailResp_PluginRecord.DiscardUnknown(m)
}

var xxx_messageInfo_DetailResp_PluginRecord proto.InternalMessageInfo

func (m *DetailResp_PluginRecord) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DetailResp_PluginRecord) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DetailResp_PluginRecord) GetIsBan() bool {
	if m != nil {
		return m.IsBan
	}
	return false
}

func (m *DetailResp_PluginRecord) GetCommandName() string {
	if m != nil {
		return m.CommandName
	}
	return ""
}

func (m *DetailResp_PluginRecord) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *DetailResp_PluginRecord) GetHelpDescription() string {
	if m != nil {
		return m.HelpDescription
	}
	return ""
}

type OperateServerReq struct {
	// 服务端id
	ServerId []string `protobuf:"bytes,1,rep,name=serverId,json=id,proto3" json:"id,omitempty"`
	// 操作类型：1. 启动  2. 停止  3.重启
	OperateType          int64    `protobuf:"varint,2,opt,name=operateType,json=operate_type,proto3" json:"operate_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OperateServerReq) Reset()         { *m = OperateServerReq{} }
func (m *OperateServerReq) String() string { return proto.CompactTextString(m) }
func (*OperateServerReq) ProtoMessage()    {}
func (*OperateServerReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{10}
}

func (m *OperateServerReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperateServerReq.Unmarshal(m, b)
}
func (m *OperateServerReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperateServerReq.Marshal(b, m, deterministic)
}
func (m *OperateServerReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperateServerReq.Merge(m, src)
}
func (m *OperateServerReq) XXX_Size() int {
	return xxx_messageInfo_OperateServerReq.Size(m)
}
func (m *OperateServerReq) XXX_DiscardUnknown() {
	xxx_messageInfo_OperateServerReq.DiscardUnknown(m)
}

var xxx_messageInfo_OperateServerReq proto.InternalMessageInfo

func (m *OperateServerReq) GetServerId() []string {
	if m != nil {
		return m.ServerId
	}
	return nil
}

func (m *OperateServerReq) GetOperateType() int64 {
	if m != nil {
		return m.OperateType
	}
	return 0
}

type OperateServerResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OperateServerResp) Reset()         { *m = OperateServerResp{} }
func (m *OperateServerResp) String() string { return proto.CompactTextString(m) }
func (*OperateServerResp) ProtoMessage()    {}
func (*OperateServerResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{11}
}

func (m *OperateServerResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperateServerResp.Unmarshal(m, b)
}
func (m *OperateServerResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperateServerResp.Marshal(b, m, deterministic)
}
func (m *OperateServerResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperateServerResp.Merge(m, src)
}
func (m *OperateServerResp) XXX_Size() int {
	return xxx_messageInfo_OperateServerResp.Size(m)
}
func (m *OperateServerResp) XXX_DiscardUnknown() {
	xxx_messageInfo_OperateServerResp.DiscardUnknown(m)
}

var xxx_messageInfo_OperateServerResp proto.InternalMessageInfo

type UpdateServerInfoReq struct {
	// 服务端实例id
	EntryId string `protobuf:"bytes,1,opt,name=entryId,json=id,proto3" json:"id,omitempty"`
	// 服务器名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 执行的完整命令
	CmdStr []string `protobuf:"bytes,3,rep,name=cmdStr,json=cmd_str,proto3" json:"cmd_str,omitempty"`
	// 启动服务器端口
	Port int64 `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	// 运行所在工作区间
	RunPath string `protobuf:"bytes,5,opt,name=runPath,json=run_rath,proto3" json:"run_rath,omitempty"`
	// 是否是镜像服务器
	IsMirror bool `protobuf:"varint,6,opt,name=isMirror,json=is_mirror,proto3" json:"is_mirror,omitempty"`
	// 是否启动资源监听器
	IsStartMonitor bool `protobuf:"varint,7,opt,name=isStartMonitor,json=is_start_monitor,proto3" json:"is_start_monitor,omitempty"`
	// 使用内存大小，单位M
	Memory int64 `protobuf:"varint,8,opt,name=memory,proto3" json:"memory,omitempty"`
	// 服务端版本
	Version string `protobuf:"bytes,9,opt,name=version,proto3" json:"version,omitempty"`
	// 服务器模式
	GameType string `protobuf:"bytes,10,opt,name=gameType,json=game_type,proto3" json:"game_type,omitempty"`
	// 启动状态：0.未启动 1.启动  -1.正在启动 -2.正在关闭
	State int64 `protobuf:"varint,11,opt,name=state,proto3" json:"state,omitempty"`
	// 本机的ip
	Ips                  []string `protobuf:"bytes,12,rep,name=ips,proto3" json:"ips,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateServerInfoReq) Reset()         { *m = UpdateServerInfoReq{} }
func (m *UpdateServerInfoReq) String() string { return proto.CompactTextString(m) }
func (*UpdateServerInfoReq) ProtoMessage()    {}
func (*UpdateServerInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{12}
}

func (m *UpdateServerInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateServerInfoReq.Unmarshal(m, b)
}
func (m *UpdateServerInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateServerInfoReq.Marshal(b, m, deterministic)
}
func (m *UpdateServerInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateServerInfoReq.Merge(m, src)
}
func (m *UpdateServerInfoReq) XXX_Size() int {
	return xxx_messageInfo_UpdateServerInfoReq.Size(m)
}
func (m *UpdateServerInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateServerInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateServerInfoReq proto.InternalMessageInfo

func (m *UpdateServerInfoReq) GetEntryId() string {
	if m != nil {
		return m.EntryId
	}
	return ""
}

func (m *UpdateServerInfoReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateServerInfoReq) GetCmdStr() []string {
	if m != nil {
		return m.CmdStr
	}
	return nil
}

func (m *UpdateServerInfoReq) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *UpdateServerInfoReq) GetRunPath() string {
	if m != nil {
		return m.RunPath
	}
	return ""
}

func (m *UpdateServerInfoReq) GetIsMirror() bool {
	if m != nil {
		return m.IsMirror
	}
	return false
}

func (m *UpdateServerInfoReq) GetIsStartMonitor() bool {
	if m != nil {
		return m.IsStartMonitor
	}
	return false
}

func (m *UpdateServerInfoReq) GetMemory() int64 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *UpdateServerInfoReq) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *UpdateServerInfoReq) GetGameType() string {
	if m != nil {
		return m.GameType
	}
	return ""
}

func (m *UpdateServerInfoReq) GetState() int64 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *UpdateServerInfoReq) GetIps() []string {
	if m != nil {
		return m.Ips
	}
	return nil
}

type UpdateServerInfoResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateServerInfoResp) Reset()         { *m = UpdateServerInfoResp{} }
func (m *UpdateServerInfoResp) String() string { return proto.CompactTextString(m) }
func (*UpdateServerInfoResp) ProtoMessage()    {}
func (*UpdateServerInfoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{13}
}

func (m *UpdateServerInfoResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateServerInfoResp.Unmarshal(m, b)
}
func (m *UpdateServerInfoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateServerInfoResp.Marshal(b, m, deterministic)
}
func (m *UpdateServerInfoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateServerInfoResp.Merge(m, src)
}
func (m *UpdateServerInfoResp) XXX_Size() int {
	return xxx_messageInfo_UpdateServerInfoResp.Size(m)
}
func (m *UpdateServerInfoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateServerInfoResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateServerInfoResp proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ListenResourceReq)(nil), "most.simple.mcd.ListenResourceReq")
	proto.RegisterType((*ListenResourceResp)(nil), "most.simple.mcd.ListenResourceResp")
	proto.RegisterType((*ServerInteractionReq)(nil), "most.simple.mcd.ServerInteractionReq")
	proto.RegisterType((*ServerInteractionResp)(nil), "most.simple.mcd.ServerInteractionResp")
	proto.RegisterType((*ListReq)(nil), "most.simple.mcd.ListReq")
	proto.RegisterType((*ListResp)(nil), "most.simple.mcd.ListResp")
	proto.RegisterType((*ListResp_Record)(nil), "most.simple.mcd.ListResp.Record")
	proto.RegisterType((*GetServerStateReq)(nil), "most.simple.mcd.GetServerStateReq")
	proto.RegisterType((*GetServerStateResp)(nil), "most.simple.mcd.GetServerStateResp")
	proto.RegisterType((*DetailReq)(nil), "most.simple.mcd.DetailReq")
	proto.RegisterType((*DetailResp)(nil), "most.simple.mcd.DetailResp")
	proto.RegisterType((*DetailResp_PluginRecord)(nil), "most.simple.mcd.DetailResp.PluginRecord")
	proto.RegisterType((*OperateServerReq)(nil), "most.simple.mcd.OperateServerReq")
	proto.RegisterType((*OperateServerResp)(nil), "most.simple.mcd.OperateServerResp")
	proto.RegisterType((*UpdateServerInfoReq)(nil), "most.simple.mcd.UpdateServerInfoReq")
	proto.RegisterType((*UpdateServerInfoResp)(nil), "most.simple.mcd.UpdateServerInfoResp")
}

func init() {
	proto.RegisterFile("server.proto", fileDescriptor_ad098daeda4239f7)
}

var fileDescriptor_ad098daeda4239f7 = []byte{
	// 710 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x96, 0xcd, 0x4e, 0xdb, 0x4a,
	0x14, 0xc7, 0x65, 0x3b, 0x71, 0x9c, 0x93, 0x00, 0xe1, 0x10, 0x60, 0x30, 0x9b, 0x60, 0xee, 0xbd,
	0xca, 0xed, 0x22, 0x0b, 0xda, 0x5d, 0x57, 0x45, 0x48, 0x08, 0xb5, 0xb4, 0xc8, 0x69, 0x2b, 0xb5,
	0x1b, 0xcb, 0xd8, 0x03, 0x8c, 0x14, 0x7b, 0x26, 0x33, 0x13, 0xa4, 0xbc, 0x4c, 0x5f, 0xa3, 0xea,
	0xae, 0x8b, 0x3e, 0x55, 0x57, 0x95, 0xc7, 0x01, 0xdc, 0x24, 0x94, 0xb2, 0x67, 0x37, 0xf3, 0x9f,
	0xdf, 0x9c, 0x33, 0x39, 0x5f, 0x31, 0xb4, 0x15, 0x95, 0xd7, 0x54, 0x0e, 0x84, 0xe4, 0x9a, 0xe3,
	0x5a, 0xc6, 0x95, 0x1e, 0x28, 0x96, 0x89, 0x11, 0x1d, 0x64, 0x49, 0x1a, 0xec, 0xc3, 0xfa, 0x1b,
	0xa6, 0x34, 0xcd, 0x43, 0xaa, 0xf8, 0x44, 0x26, 0x34, 0xa4, 0x63, 0x5c, 0x05, 0x9b, 0xa5, 0xc4,
	0xea, 0x59, 0xfd, 0x66, 0x68, 0xb3, 0x34, 0xe8, 0x02, 0xce, 0x43, 0x4a, 0x04, 0xff, 0x41, 0x77,
	0x68, 0x6c, 0x9f, 0xe4, 0x9a, 0xca, 0x38, 0xd1, 0x8c, 0xe7, 0xcb, 0x6e, 0x6f, 0xc3, 0xe6, 0x12,
	0x4e, 0x89, 0xa0, 0x09, 0x8d, 0xc2, 0x6c, 0x48, 0xc7, 0xc1, 0x4f, 0x1b, 0xbc, 0x72, 0xad, 0x04,
	0xbe, 0x80, 0xda, 0x88, 0x29, 0x4d, 0xac, 0x9e, 0xd3, 0x6f, 0x1d, 0xf4, 0x06, 0x73, 0x6f, 0x1e,
	0xdc, 0x80, 0x83, 0x90, 0x26, 0x5c, 0xa6, 0xa1, 0xa1, 0xfd, 0xaf, 0x36, 0xb8, 0xa5, 0x80, 0x1b,
	0xd0, 0xa0, 0xb9, 0x96, 0xd3, 0x93, 0xca, 0x33, 0x10, 0xa1, 0x96, 0xc7, 0x19, 0x25, 0xb6, 0x51,
	0xcc, 0x1a, 0xb7, 0xc1, 0x4d, 0xb2, 0x74, 0xa8, 0x25, 0x71, 0x7a, 0x4e, 0xbf, 0x19, 0x36, 0x92,
	0x2c, 0x8d, 0x94, 0x96, 0x05, 0x2c, 0xb8, 0xd4, 0xa4, 0xd6, 0xb3, 0xfa, 0x4e, 0x68, 0xd6, 0xb8,
	0x03, 0x0d, 0x39, 0xc9, 0xcf, 0x62, 0x7d, 0x45, 0xea, 0xc6, 0x86, 0x27, 0x27, 0x79, 0x24, 0x63,
	0x7d, 0x85, 0xbb, 0xe0, 0x31, 0x75, 0xca, 0xa4, 0xe4, 0x92, 0xb8, 0x3d, 0xab, 0xef, 0x85, 0x4d,
	0xa6, 0xa2, 0xcc, 0x08, 0xd8, 0x87, 0x55, 0xa6, 0x86, 0x3a, 0x96, 0xfa, 0x94, 0xe7, 0x4c, 0x73,
	0x49, 0x1a, 0x06, 0xe9, 0x30, 0x15, 0xa9, 0x42, 0x8e, 0xb2, 0x52, 0xc7, 0x2d, 0x70, 0x33, 0x9a,
	0x71, 0x39, 0x25, 0x9e, 0xf1, 0x3b, 0xdb, 0x21, 0x81, 0xc6, 0x35, 0x95, 0x8a, 0xf1, 0x9c, 0x34,
	0x8d, 0xe7, 0x9b, 0x6d, 0xe1, 0xf8, 0x32, 0xce, 0xe8, 0xfb, 0xa9, 0xa0, 0x04, 0xcc, 0x51, 0xb3,
	0xd8, 0x47, 0x7a, 0x2a, 0x28, 0x76, 0xa1, 0xae, 0x74, 0xac, 0x29, 0x69, 0x19, 0x6b, 0xe5, 0x06,
	0x3b, 0xe0, 0x30, 0xa1, 0x48, 0xdb, 0xfc, 0xe0, 0x62, 0x59, 0xd4, 0xc0, 0x31, 0xd5, 0x65, 0x8e,
	0x86, 0x05, 0xb3, 0x2c, 0x8b, 0xcf, 0x00, 0xe7, 0x21, 0x25, 0xee, 0x5c, 0x58, 0x15, 0x17, 0xc1,
	0x2e, 0x34, 0x8f, 0xa8, 0x8e, 0xd9, 0x68, 0x99, 0xa1, 0xef, 0x35, 0x80, 0x9b, 0x53, 0x25, 0x9e,
	0x72, 0xf5, 0xa8, 0x5c, 0xe1, 0x31, 0x78, 0x62, 0x34, 0xb9, 0x64, 0xf9, 0x05, 0x27, 0x2b, 0xa6,
	0x3f, 0xfa, 0x0b, 0xfd, 0x71, 0x17, 0xdd, 0xc1, 0x99, 0x61, 0x67, 0x7d, 0xd2, 0x2a, 0x6f, 0x46,
	0xc5, 0x65, 0xff, 0x9b, 0x05, 0xed, 0xea, 0xe9, 0x6d, 0xcc, 0xad, 0x4a, 0xcc, 0xcb, 0xdc, 0xd9,
	0xb7, 0x79, 0xd9, 0x84, 0x3a, 0x53, 0x87, 0x71, 0x4e, 0x1c, 0x13, 0x15, 0x97, 0xa9, 0xe8, 0x3c,
	0xce, 0x71, 0x0f, 0x5a, 0x09, 0xcf, 0xb2, 0x38, 0x4f, 0xdf, 0x16, 0x16, 0x6a, 0x86, 0x6f, 0xcf,
	0xa4, 0xc8, 0x58, 0xea, 0x41, 0x2b, 0xa5, 0x2a, 0x91, 0x4c, 0x14, 0xed, 0x3f, 0x4b, 0x4a, 0x55,
	0xc2, 0xff, 0x61, 0xed, 0x8a, 0x8e, 0xc4, 0x51, 0x85, 0x72, 0x0d, 0xd5, 0x29, 0xe4, 0xa8, 0x82,
	0x06, 0xaf, 0xa1, 0xf3, 0x4e, 0x50, 0x19, 0x6b, 0x5a, 0xd6, 0x63, 0x51, 0x66, 0x5d, 0xf0, 0xca,
	0x49, 0x67, 0x0a, 0xc9, 0x99, 0x3d, 0x78, 0x0f, 0x5a, 0xbc, 0x24, 0x4d, 0xd8, 0x6d, 0x13, 0xdc,
	0xf6, 0x4c, 0x32, 0x91, 0x0f, 0x36, 0x60, 0x7d, 0xce, 0x98, 0x12, 0xc1, 0x0f, 0x1b, 0x36, 0x3e,
	0x88, 0xf4, 0x56, 0x3c, 0xc9, 0x2f, 0x78, 0xe1, 0xe5, 0xa9, 0x5a, 0x1f, 0x35, 0x59, 0xb6, 0xa0,
	0xbb, 0x18, 0x45, 0x25, 0x0e, 0xbe, 0x38, 0xe0, 0x9d, 0x26, 0xa5, 0x88, 0x2f, 0xcb, 0x71, 0x8f,
	0xe4, 0x9e, 0x41, 0x3f, 0xf6, 0x77, 0xee, 0xfd, 0x0b, 0xc0, 0x4f, 0xb0, 0x7a, 0xf9, 0xdb, 0x58,
	0xc2, 0x60, 0x01, 0x5e, 0x18, 0x6e, 0xfe, 0xfe, 0x83, 0x8c, 0x12, 0xf8, 0x0a, 0xdc, 0xd4, 0x74,
	0x12, 0xfa, 0xf7, 0xb6, 0xd8, 0xd8, 0xdf, 0xfd, 0x43, 0xfb, 0xe1, 0x47, 0x58, 0xe1, 0xd5, 0xda,
	0xc2, 0xbd, 0x05, 0x7a, 0xbe, 0x90, 0xfd, 0xe0, 0x21, 0x44, 0x09, 0x8c, 0xa0, 0x33, 0x99, 0x8b,
	0x2b, 0xfe, 0xb3, 0x70, 0x6f, 0x49, 0x01, 0xfb, 0xff, 0xfe, 0x05, 0xa5, 0xc4, 0x61, 0xfd, 0xb3,
	0x13, 0x0b, 0x76, 0xee, 0x9a, 0xaf, 0x86, 0xe7, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0x4b, 0xd4,
	0xc8, 0x7b, 0x45, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// McServerClient is the client API for McServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type McServerClient interface {
	// 获取服务端信息列表
	// `middleware:"auth"`
	List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error)
	// 获取服务端信息列表
	// `middleware:"auth"`
	GetServerState(ctx context.Context, in *GetServerStateReq, opts ...grpc.CallOption) (*GetServerStateResp, error)
	// 获取服务端详情
	// `middleware:"auth"`
	Detail(ctx context.Context, in *DetailReq, opts ...grpc.CallOption) (*DetailResp, error)
	// 操作服务端
	// `middleware:"auth"`
	OperateServer(ctx context.Context, in *OperateServerReq, opts ...grpc.CallOption) (*OperateServerResp, error)
	// 修改服务端参数
	// `middleware:"auth"`
	UpdateServerInfo(ctx context.Context, in *UpdateServerInfoReq, opts ...grpc.CallOption) (*UpdateServerInfoResp, error)
}

type mcServerClient struct {
	cc grpc.ClientConnInterface
}

func NewMcServerClient(cc grpc.ClientConnInterface) McServerClient {
	return &mcServerClient{cc}
}

func (c *mcServerClient) List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error) {
	out := new(ListResp)
	err := c.cc.Invoke(ctx, "/most.simple.mcd.McServer/list", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mcServerClient) GetServerState(ctx context.Context, in *GetServerStateReq, opts ...grpc.CallOption) (*GetServerStateResp, error) {
	out := new(GetServerStateResp)
	err := c.cc.Invoke(ctx, "/most.simple.mcd.McServer/getServerState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mcServerClient) Detail(ctx context.Context, in *DetailReq, opts ...grpc.CallOption) (*DetailResp, error) {
	out := new(DetailResp)
	err := c.cc.Invoke(ctx, "/most.simple.mcd.McServer/detail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mcServerClient) OperateServer(ctx context.Context, in *OperateServerReq, opts ...grpc.CallOption) (*OperateServerResp, error) {
	out := new(OperateServerResp)
	err := c.cc.Invoke(ctx, "/most.simple.mcd.McServer/operateServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mcServerClient) UpdateServerInfo(ctx context.Context, in *UpdateServerInfoReq, opts ...grpc.CallOption) (*UpdateServerInfoResp, error) {
	out := new(UpdateServerInfoResp)
	err := c.cc.Invoke(ctx, "/most.simple.mcd.McServer/updateServerInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// McServerServer is the server API for McServer service.
type McServerServer interface {
	// 获取服务端信息列表
	// `middleware:"auth"`
	List(context.Context, *ListReq) (*ListResp, error)
	// 获取服务端信息列表
	// `middleware:"auth"`
	GetServerState(context.Context, *GetServerStateReq) (*GetServerStateResp, error)
	// 获取服务端详情
	// `middleware:"auth"`
	Detail(context.Context, *DetailReq) (*DetailResp, error)
	// 操作服务端
	// `middleware:"auth"`
	OperateServer(context.Context, *OperateServerReq) (*OperateServerResp, error)
	// 修改服务端参数
	// `middleware:"auth"`
	UpdateServerInfo(context.Context, *UpdateServerInfoReq) (*UpdateServerInfoResp, error)
}

// UnimplementedMcServerServer can be embedded to have forward compatible implementations.
type UnimplementedMcServerServer struct {
}

func (*UnimplementedMcServerServer) List(ctx context.Context, req *ListReq) (*ListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedMcServerServer) GetServerState(ctx context.Context, req *GetServerStateReq) (*GetServerStateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServerState not implemented")
}
func (*UnimplementedMcServerServer) Detail(ctx context.Context, req *DetailReq) (*DetailResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Detail not implemented")
}
func (*UnimplementedMcServerServer) OperateServer(ctx context.Context, req *OperateServerReq) (*OperateServerResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OperateServer not implemented")
}
func (*UnimplementedMcServerServer) UpdateServerInfo(ctx context.Context, req *UpdateServerInfoReq) (*UpdateServerInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateServerInfo not implemented")
}

func RegisterMcServerServer(s *grpc.Server, srv McServerServer) {
	s.RegisterService(&_McServer_serviceDesc, srv)
}

func _McServer_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(McServerServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/most.simple.mcd.McServer/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(McServerServer).List(ctx, req.(*ListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _McServer_GetServerState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServerStateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(McServerServer).GetServerState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/most.simple.mcd.McServer/GetServerState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(McServerServer).GetServerState(ctx, req.(*GetServerStateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _McServer_Detail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DetailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(McServerServer).Detail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/most.simple.mcd.McServer/Detail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(McServerServer).Detail(ctx, req.(*DetailReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _McServer_OperateServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OperateServerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(McServerServer).OperateServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/most.simple.mcd.McServer/OperateServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(McServerServer).OperateServer(ctx, req.(*OperateServerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _McServer_UpdateServerInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateServerInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(McServerServer).UpdateServerInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/most.simple.mcd.McServer/UpdateServerInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(McServerServer).UpdateServerInfo(ctx, req.(*UpdateServerInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _McServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "most.simple.mcd.McServer",
	HandlerType: (*McServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "list",
			Handler:    _McServer_List_Handler,
		},
		{
			MethodName: "getServerState",
			Handler:    _McServer_GetServerState_Handler,
		},
		{
			MethodName: "detail",
			Handler:    _McServer_Detail_Handler,
		},
		{
			MethodName: "operateServer",
			Handler:    _McServer_OperateServer_Handler,
		},
		{
			MethodName: "updateServerInfo",
			Handler:    _McServer_UpdateServerInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server.proto",
}
