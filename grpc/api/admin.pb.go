// Code generated by protoc-gen-go. DO NOT EDIT.
// source: admin.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/lightbrotherV/gin-protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetConfigReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConfigReq) Reset()         { *m = GetConfigReq{} }
func (m *GetConfigReq) String() string { return proto.CompactTextString(m) }
func (*GetConfigReq) ProtoMessage()    {}
func (*GetConfigReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{0}
}

func (m *GetConfigReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfigReq.Unmarshal(m, b)
}
func (m *GetConfigReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfigReq.Marshal(b, m, deterministic)
}
func (m *GetConfigReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigReq.Merge(m, src)
}
func (m *GetConfigReq) XXX_Size() int {
	return xxx_messageInfo_GetConfigReq.Size(m)
}
func (m *GetConfigReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigReq proto.InternalMessageInfo

type GetConfigResp struct {
	List                 []*GetConfigResp_Record `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GetConfigResp) Reset()         { *m = GetConfigResp{} }
func (m *GetConfigResp) String() string { return proto.CompactTextString(m) }
func (*GetConfigResp) ProtoMessage()    {}
func (*GetConfigResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{1}
}

func (m *GetConfigResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfigResp.Unmarshal(m, b)
}
func (m *GetConfigResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfigResp.Marshal(b, m, deterministic)
}
func (m *GetConfigResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigResp.Merge(m, src)
}
func (m *GetConfigResp) XXX_Size() int {
	return xxx_messageInfo_GetConfigResp.Size(m)
}
func (m *GetConfigResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigResp proto.InternalMessageInfo

func (m *GetConfigResp) GetList() []*GetConfigResp_Record {
	if m != nil {
		return m.List
	}
	return nil
}

type GetConfigResp_Record struct {
	// 配置名称
	ConfVal string `protobuf:"bytes,1,opt,name=confVal,json=config_val,proto3" json:"config_val,omitempty"`
	// 配置值
	Name string `protobuf:"bytes,3,opt,name=name,json=config_key,proto3" json:"config_key,omitempty"`
	// 配置等级
	Level int64 `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	// 配置描述
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// 是否在后台可修改
	IsAlterable          bool     `protobuf:"varint,6,opt,name=isAlterable,json=is_alterable,proto3" json:"is_alterable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConfigResp_Record) Reset()         { *m = GetConfigResp_Record{} }
func (m *GetConfigResp_Record) String() string { return proto.CompactTextString(m) }
func (*GetConfigResp_Record) ProtoMessage()    {}
func (*GetConfigResp_Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{1, 0}
}

func (m *GetConfigResp_Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfigResp_Record.Unmarshal(m, b)
}
func (m *GetConfigResp_Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfigResp_Record.Marshal(b, m, deterministic)
}
func (m *GetConfigResp_Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigResp_Record.Merge(m, src)
}
func (m *GetConfigResp_Record) XXX_Size() int {
	return xxx_messageInfo_GetConfigResp_Record.Size(m)
}
func (m *GetConfigResp_Record) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigResp_Record.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigResp_Record proto.InternalMessageInfo

func (m *GetConfigResp_Record) GetConfVal() string {
	if m != nil {
		return m.ConfVal
	}
	return ""
}

func (m *GetConfigResp_Record) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetConfigResp_Record) GetLevel() int64 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *GetConfigResp_Record) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *GetConfigResp_Record) GetIsAlterable() bool {
	if m != nil {
		return m.IsAlterable
	}
	return false
}

type UpdateConfigReq struct {
	List                 []*UpdateConfigReq_Record `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *UpdateConfigReq) Reset()         { *m = UpdateConfigReq{} }
func (m *UpdateConfigReq) String() string { return proto.CompactTextString(m) }
func (*UpdateConfigReq) ProtoMessage()    {}
func (*UpdateConfigReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{2}
}

func (m *UpdateConfigReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateConfigReq.Unmarshal(m, b)
}
func (m *UpdateConfigReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateConfigReq.Marshal(b, m, deterministic)
}
func (m *UpdateConfigReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateConfigReq.Merge(m, src)
}
func (m *UpdateConfigReq) XXX_Size() int {
	return xxx_messageInfo_UpdateConfigReq.Size(m)
}
func (m *UpdateConfigReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateConfigReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateConfigReq proto.InternalMessageInfo

func (m *UpdateConfigReq) GetList() []*UpdateConfigReq_Record {
	if m != nil {
		return m.List
	}
	return nil
}

type UpdateConfigReq_Record struct {
	// 配置名称
	ConfVal string `protobuf:"bytes,1,opt,name=confVal,json=config_val,proto3" json:"config_val,omitempty"`
	// 配置值
	Name string `protobuf:"bytes,3,opt,name=name,json=config_key,proto3" json:"config_key,omitempty"`
	// 配置等级
	Level int64 `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	// 配置描述
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// 是否在后台可修改
	IsAlterable          bool     `protobuf:"varint,6,opt,name=isAlterable,json=is_alterable,proto3" json:"is_alterable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateConfigReq_Record) Reset()         { *m = UpdateConfigReq_Record{} }
func (m *UpdateConfigReq_Record) String() string { return proto.CompactTextString(m) }
func (*UpdateConfigReq_Record) ProtoMessage()    {}
func (*UpdateConfigReq_Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{2, 0}
}

func (m *UpdateConfigReq_Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateConfigReq_Record.Unmarshal(m, b)
}
func (m *UpdateConfigReq_Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateConfigReq_Record.Marshal(b, m, deterministic)
}
func (m *UpdateConfigReq_Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateConfigReq_Record.Merge(m, src)
}
func (m *UpdateConfigReq_Record) XXX_Size() int {
	return xxx_messageInfo_UpdateConfigReq_Record.Size(m)
}
func (m *UpdateConfigReq_Record) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateConfigReq_Record.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateConfigReq_Record proto.InternalMessageInfo

func (m *UpdateConfigReq_Record) GetConfVal() string {
	if m != nil {
		return m.ConfVal
	}
	return ""
}

func (m *UpdateConfigReq_Record) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateConfigReq_Record) GetLevel() int64 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *UpdateConfigReq_Record) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UpdateConfigReq_Record) GetIsAlterable() bool {
	if m != nil {
		return m.IsAlterable
	}
	return false
}

type UpdateConfigResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateConfigResp) Reset()         { *m = UpdateConfigResp{} }
func (m *UpdateConfigResp) String() string { return proto.CompactTextString(m) }
func (*UpdateConfigResp) ProtoMessage()    {}
func (*UpdateConfigResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{3}
}

func (m *UpdateConfigResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateConfigResp.Unmarshal(m, b)
}
func (m *UpdateConfigResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateConfigResp.Marshal(b, m, deterministic)
}
func (m *UpdateConfigResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateConfigResp.Merge(m, src)
}
func (m *UpdateConfigResp) XXX_Size() int {
	return xxx_messageInfo_UpdateConfigResp.Size(m)
}
func (m *UpdateConfigResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateConfigResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateConfigResp proto.InternalMessageInfo

type OperatePluginReq struct {
	// 服务端id
	ServerId string `protobuf:"bytes,1,opt,name=serverId,json=server_id,proto3" json:"server_id,omitempty"`
	// 插件id
	PluginId []string `protobuf:"bytes,2,rep,name=pluginId,json=plugin_id,proto3" json:"plugin_id,omitempty"`
	// 操作类型：1. 启动  2. 停止
	OperateType          int64    `protobuf:"varint,3,opt,name=operateType,json=operate_type,proto3" json:"operate_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OperatePluginReq) Reset()         { *m = OperatePluginReq{} }
func (m *OperatePluginReq) String() string { return proto.CompactTextString(m) }
func (*OperatePluginReq) ProtoMessage()    {}
func (*OperatePluginReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{4}
}

func (m *OperatePluginReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperatePluginReq.Unmarshal(m, b)
}
func (m *OperatePluginReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperatePluginReq.Marshal(b, m, deterministic)
}
func (m *OperatePluginReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperatePluginReq.Merge(m, src)
}
func (m *OperatePluginReq) XXX_Size() int {
	return xxx_messageInfo_OperatePluginReq.Size(m)
}
func (m *OperatePluginReq) XXX_DiscardUnknown() {
	xxx_messageInfo_OperatePluginReq.DiscardUnknown(m)
}

var xxx_messageInfo_OperatePluginReq proto.InternalMessageInfo

func (m *OperatePluginReq) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

func (m *OperatePluginReq) GetPluginId() []string {
	if m != nil {
		return m.PluginId
	}
	return nil
}

func (m *OperatePluginReq) GetOperateType() int64 {
	if m != nil {
		return m.OperateType
	}
	return 0
}

type OperatePluginResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OperatePluginResp) Reset()         { *m = OperatePluginResp{} }
func (m *OperatePluginResp) String() string { return proto.CompactTextString(m) }
func (*OperatePluginResp) ProtoMessage()    {}
func (*OperatePluginResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{5}
}

func (m *OperatePluginResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperatePluginResp.Unmarshal(m, b)
}
func (m *OperatePluginResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperatePluginResp.Marshal(b, m, deterministic)
}
func (m *OperatePluginResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperatePluginResp.Merge(m, src)
}
func (m *OperatePluginResp) XXX_Size() int {
	return xxx_messageInfo_OperatePluginResp.Size(m)
}
func (m *OperatePluginResp) XXX_DiscardUnknown() {
	xxx_messageInfo_OperatePluginResp.DiscardUnknown(m)
}

var xxx_messageInfo_OperatePluginResp proto.InternalMessageInfo

type GetConfigValReq struct {
	// 配置名称
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConfigValReq) Reset()         { *m = GetConfigValReq{} }
func (m *GetConfigValReq) String() string { return proto.CompactTextString(m) }
func (*GetConfigValReq) ProtoMessage()    {}
func (*GetConfigValReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{6}
}

func (m *GetConfigValReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfigValReq.Unmarshal(m, b)
}
func (m *GetConfigValReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfigValReq.Marshal(b, m, deterministic)
}
func (m *GetConfigValReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigValReq.Merge(m, src)
}
func (m *GetConfigValReq) XXX_Size() int {
	return xxx_messageInfo_GetConfigValReq.Size(m)
}
func (m *GetConfigValReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigValReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigValReq proto.InternalMessageInfo

func (m *GetConfigValReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetConfigValResp struct {
	// 配置名称
	ConfVal string `protobuf:"bytes,1,opt,name=confVal,json=config_val,proto3" json:"config_val,omitempty"`
	// 配置值
	Name string `protobuf:"bytes,3,opt,name=name,json=config_key,proto3" json:"config_key,omitempty"`
	// 配置等级
	Level int64 `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	// 配置描述
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// 是否在后台可修改
	IsAlterable          bool     `protobuf:"varint,6,opt,name=isAlterable,json=is_alterable,proto3" json:"is_alterable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConfigValResp) Reset()         { *m = GetConfigValResp{} }
func (m *GetConfigValResp) String() string { return proto.CompactTextString(m) }
func (*GetConfigValResp) ProtoMessage()    {}
func (*GetConfigValResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{7}
}

func (m *GetConfigValResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfigValResp.Unmarshal(m, b)
}
func (m *GetConfigValResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfigValResp.Marshal(b, m, deterministic)
}
func (m *GetConfigValResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigValResp.Merge(m, src)
}
func (m *GetConfigValResp) XXX_Size() int {
	return xxx_messageInfo_GetConfigValResp.Size(m)
}
func (m *GetConfigValResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigValResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigValResp proto.InternalMessageInfo

func (m *GetConfigValResp) GetConfVal() string {
	if m != nil {
		return m.ConfVal
	}
	return ""
}

func (m *GetConfigValResp) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetConfigValResp) GetLevel() int64 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *GetConfigValResp) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *GetConfigValResp) GetIsAlterable() bool {
	if m != nil {
		return m.IsAlterable
	}
	return false
}

type RunCommandReq struct {
	// 命令
	Command string `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	// 服务端id
	ServerId string `protobuf:"bytes,2,opt,name=serverId,json=id,proto3" json:"id,omitempty"`
	// 1：插件运行命令  2：服务端运行命令   3：插件、服务端都运行
	Type                 int64    `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunCommandReq) Reset()         { *m = RunCommandReq{} }
func (m *RunCommandReq) String() string { return proto.CompactTextString(m) }
func (*RunCommandReq) ProtoMessage()    {}
func (*RunCommandReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{8}
}

func (m *RunCommandReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunCommandReq.Unmarshal(m, b)
}
func (m *RunCommandReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunCommandReq.Marshal(b, m, deterministic)
}
func (m *RunCommandReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunCommandReq.Merge(m, src)
}
func (m *RunCommandReq) XXX_Size() int {
	return xxx_messageInfo_RunCommandReq.Size(m)
}
func (m *RunCommandReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RunCommandReq.DiscardUnknown(m)
}

var xxx_messageInfo_RunCommandReq proto.InternalMessageInfo

func (m *RunCommandReq) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *RunCommandReq) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

func (m *RunCommandReq) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

type RunCommandResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunCommandResp) Reset()         { *m = RunCommandResp{} }
func (m *RunCommandResp) String() string { return proto.CompactTextString(m) }
func (*RunCommandResp) ProtoMessage()    {}
func (*RunCommandResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{9}
}

func (m *RunCommandResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunCommandResp.Unmarshal(m, b)
}
func (m *RunCommandResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunCommandResp.Marshal(b, m, deterministic)
}
func (m *RunCommandResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunCommandResp.Merge(m, src)
}
func (m *RunCommandResp) XXX_Size() int {
	return xxx_messageInfo_RunCommandResp.Size(m)
}
func (m *RunCommandResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RunCommandResp.DiscardUnknown(m)
}

var xxx_messageInfo_RunCommandResp proto.InternalMessageInfo

type GetLogReq struct {
	// 日志类型 1. 根据id获取服务端日志 2. gin服务器日志 3. 默认全局日志
	Type int64 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	// 如果根据id获取服务端日志，则需要传id
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLogReq) Reset()         { *m = GetLogReq{} }
func (m *GetLogReq) String() string { return proto.CompactTextString(m) }
func (*GetLogReq) ProtoMessage()    {}
func (*GetLogReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{10}
}

func (m *GetLogReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLogReq.Unmarshal(m, b)
}
func (m *GetLogReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLogReq.Marshal(b, m, deterministic)
}
func (m *GetLogReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLogReq.Merge(m, src)
}
func (m *GetLogReq) XXX_Size() int {
	return xxx_messageInfo_GetLogReq.Size(m)
}
func (m *GetLogReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLogReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetLogReq proto.InternalMessageInfo

func (m *GetLogReq) GetType() int64 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *GetLogReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetLogResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLogResp) Reset()         { *m = GetLogResp{} }
func (m *GetLogResp) String() string { return proto.CompactTextString(m) }
func (*GetLogResp) ProtoMessage()    {}
func (*GetLogResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{11}
}

func (m *GetLogResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLogResp.Unmarshal(m, b)
}
func (m *GetLogResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLogResp.Marshal(b, m, deterministic)
}
func (m *GetLogResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLogResp.Merge(m, src)
}
func (m *GetLogResp) XXX_Size() int {
	return xxx_messageInfo_GetLogResp.Size(m)
}
func (m *GetLogResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLogResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetLogResp proto.InternalMessageInfo

type DelTmpFlieReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelTmpFlieReq) Reset()         { *m = DelTmpFlieReq{} }
func (m *DelTmpFlieReq) String() string { return proto.CompactTextString(m) }
func (*DelTmpFlieReq) ProtoMessage()    {}
func (*DelTmpFlieReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{12}
}

func (m *DelTmpFlieReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelTmpFlieReq.Unmarshal(m, b)
}
func (m *DelTmpFlieReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelTmpFlieReq.Marshal(b, m, deterministic)
}
func (m *DelTmpFlieReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelTmpFlieReq.Merge(m, src)
}
func (m *DelTmpFlieReq) XXX_Size() int {
	return xxx_messageInfo_DelTmpFlieReq.Size(m)
}
func (m *DelTmpFlieReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DelTmpFlieReq.DiscardUnknown(m)
}

var xxx_messageInfo_DelTmpFlieReq proto.InternalMessageInfo

type DelTmpFlieResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelTmpFlieResp) Reset()         { *m = DelTmpFlieResp{} }
func (m *DelTmpFlieResp) String() string { return proto.CompactTextString(m) }
func (*DelTmpFlieResp) ProtoMessage()    {}
func (*DelTmpFlieResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{13}
}

func (m *DelTmpFlieResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelTmpFlieResp.Unmarshal(m, b)
}
func (m *DelTmpFlieResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelTmpFlieResp.Marshal(b, m, deterministic)
}
func (m *DelTmpFlieResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelTmpFlieResp.Merge(m, src)
}
func (m *DelTmpFlieResp) XXX_Size() int {
	return xxx_messageInfo_DelTmpFlieResp.Size(m)
}
func (m *DelTmpFlieResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DelTmpFlieResp.DiscardUnknown(m)
}

var xxx_messageInfo_DelTmpFlieResp proto.InternalMessageInfo

type AddUpToContainerReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddUpToContainerReq) Reset()         { *m = AddUpToContainerReq{} }
func (m *AddUpToContainerReq) String() string { return proto.CompactTextString(m) }
func (*AddUpToContainerReq) ProtoMessage()    {}
func (*AddUpToContainerReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{14}
}

func (m *AddUpToContainerReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddUpToContainerReq.Unmarshal(m, b)
}
func (m *AddUpToContainerReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddUpToContainerReq.Marshal(b, m, deterministic)
}
func (m *AddUpToContainerReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddUpToContainerReq.Merge(m, src)
}
func (m *AddUpToContainerReq) XXX_Size() int {
	return xxx_messageInfo_AddUpToContainerReq.Size(m)
}
func (m *AddUpToContainerReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddUpToContainerReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddUpToContainerReq proto.InternalMessageInfo

type AddUpToContainerResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddUpToContainerResp) Reset()         { *m = AddUpToContainerResp{} }
func (m *AddUpToContainerResp) String() string { return proto.CompactTextString(m) }
func (*AddUpToContainerResp) ProtoMessage()    {}
func (*AddUpToContainerResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{15}
}

func (m *AddUpToContainerResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddUpToContainerResp.Unmarshal(m, b)
}
func (m *AddUpToContainerResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddUpToContainerResp.Marshal(b, m, deterministic)
}
func (m *AddUpToContainerResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddUpToContainerResp.Merge(m, src)
}
func (m *AddUpToContainerResp) XXX_Size() int {
	return xxx_messageInfo_AddUpToContainerResp.Size(m)
}
func (m *AddUpToContainerResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AddUpToContainerResp.DiscardUnknown(m)
}

var xxx_messageInfo_AddUpToContainerResp proto.InternalMessageInfo

type CloseMcdReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseMcdReq) Reset()         { *m = CloseMcdReq{} }
func (m *CloseMcdReq) String() string { return proto.CompactTextString(m) }
func (*CloseMcdReq) ProtoMessage()    {}
func (*CloseMcdReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{16}
}

func (m *CloseMcdReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseMcdReq.Unmarshal(m, b)
}
func (m *CloseMcdReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseMcdReq.Marshal(b, m, deterministic)
}
func (m *CloseMcdReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseMcdReq.Merge(m, src)
}
func (m *CloseMcdReq) XXX_Size() int {
	return xxx_messageInfo_CloseMcdReq.Size(m)
}
func (m *CloseMcdReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseMcdReq.DiscardUnknown(m)
}

var xxx_messageInfo_CloseMcdReq proto.InternalMessageInfo

type CloseMcdResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseMcdResp) Reset()         { *m = CloseMcdResp{} }
func (m *CloseMcdResp) String() string { return proto.CompactTextString(m) }
func (*CloseMcdResp) ProtoMessage()    {}
func (*CloseMcdResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{17}
}

func (m *CloseMcdResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseMcdResp.Unmarshal(m, b)
}
func (m *CloseMcdResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseMcdResp.Marshal(b, m, deterministic)
}
func (m *CloseMcdResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseMcdResp.Merge(m, src)
}
func (m *CloseMcdResp) XXX_Size() int {
	return xxx_messageInfo_CloseMcdResp.Size(m)
}
func (m *CloseMcdResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseMcdResp.DiscardUnknown(m)
}

var xxx_messageInfo_CloseMcdResp proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GetConfigReq)(nil), "most.simple.mcd.GetConfigReq")
	proto.RegisterType((*GetConfigResp)(nil), "most.simple.mcd.GetConfigResp")
	proto.RegisterType((*GetConfigResp_Record)(nil), "most.simple.mcd.GetConfigResp.Record")
	proto.RegisterType((*UpdateConfigReq)(nil), "most.simple.mcd.UpdateConfigReq")
	proto.RegisterType((*UpdateConfigReq_Record)(nil), "most.simple.mcd.UpdateConfigReq.Record")
	proto.RegisterType((*UpdateConfigResp)(nil), "most.simple.mcd.UpdateConfigResp")
	proto.RegisterType((*OperatePluginReq)(nil), "most.simple.mcd.OperatePluginReq")
	proto.RegisterType((*OperatePluginResp)(nil), "most.simple.mcd.OperatePluginResp")
	proto.RegisterType((*GetConfigValReq)(nil), "most.simple.mcd.GetConfigValReq")
	proto.RegisterType((*GetConfigValResp)(nil), "most.simple.mcd.GetConfigValResp")
	proto.RegisterType((*RunCommandReq)(nil), "most.simple.mcd.RunCommandReq")
	proto.RegisterType((*RunCommandResp)(nil), "most.simple.mcd.RunCommandResp")
	proto.RegisterType((*GetLogReq)(nil), "most.simple.mcd.GetLogReq")
	proto.RegisterType((*GetLogResp)(nil), "most.simple.mcd.GetLogResp")
	proto.RegisterType((*DelTmpFlieReq)(nil), "most.simple.mcd.DelTmpFlieReq")
	proto.RegisterType((*DelTmpFlieResp)(nil), "most.simple.mcd.DelTmpFlieResp")
	proto.RegisterType((*AddUpToContainerReq)(nil), "most.simple.mcd.AddUpToContainerReq")
	proto.RegisterType((*AddUpToContainerResp)(nil), "most.simple.mcd.AddUpToContainerResp")
	proto.RegisterType((*CloseMcdReq)(nil), "most.simple.mcd.CloseMcdReq")
	proto.RegisterType((*CloseMcdResp)(nil), "most.simple.mcd.CloseMcdResp")
}

func init() {
	proto.RegisterFile("admin.proto", fileDescriptor_73a7fc70dcc2027c)
}

var fileDescriptor_73a7fc70dcc2027c = []byte{
	// 668 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x55, 0xcb, 0x6e, 0xd3, 0x40,
	0x14, 0x95, 0x93, 0x26, 0x24, 0x37, 0x4f, 0xa6, 0x05, 0x59, 0x2e, 0x85, 0x74, 0x44, 0x45, 0x56,
	0x41, 0x2a, 0x2b, 0xc4, 0x2a, 0x04, 0x51, 0x15, 0x11, 0x81, 0xdc, 0xb4, 0x0b, 0x16, 0x44, 0x53,
	0x7b, 0x1a, 0x8d, 0x18, 0x7b, 0x6e, 0x3d, 0x6e, 0xa5, 0xfe, 0x0a, 0x6b, 0x3e, 0x84, 0xbf, 0x61,
	0xc1, 0x4f, 0xa0, 0xb1, 0x93, 0xd4, 0x8e, 0x43, 0xca, 0x82, 0x05, 0xec, 0x7c, 0x1f, 0x67, 0x7c,
	0xce, 0xf5, 0xb9, 0x63, 0x68, 0x30, 0x3f, 0x10, 0xe1, 0x00, 0x23, 0x15, 0x2b, 0xd2, 0x09, 0x94,
	0x8e, 0x07, 0x5a, 0x04, 0x28, 0xf9, 0x20, 0xf0, 0x7c, 0xda, 0x86, 0xe6, 0x11, 0x8f, 0x47, 0x2a,
	0xbc, 0x10, 0x33, 0x97, 0x5f, 0xd2, 0x1f, 0x16, 0xb4, 0x32, 0x09, 0x8d, 0xe4, 0x25, 0x6c, 0x49,
	0xa1, 0x63, 0xdb, 0xea, 0x95, 0xfb, 0x8d, 0xc3, 0x83, 0xc1, 0xca, 0x09, 0x83, 0x5c, 0xf7, 0xc0,
	0xe5, 0x9e, 0x8a, 0x7c, 0x37, 0x81, 0x38, 0x5f, 0x2d, 0xa8, 0xa6, 0x09, 0xb2, 0x0b, 0xf7, 0x3c,
	0x15, 0x5e, 0x9c, 0x31, 0x69, 0x5b, 0x3d, 0xab, 0x5f, 0x77, 0xc1, 0x4b, 0x40, 0xd3, 0x6b, 0x26,
	0x89, 0x0d, 0x5b, 0x21, 0x0b, 0xb8, 0x5d, 0xce, 0x55, 0xbe, 0xf0, 0x1b, 0xb2, 0x03, 0x15, 0xc9,
	0xaf, 0xb9, 0xb4, 0xb7, 0x7a, 0x56, 0xbf, 0xec, 0xa6, 0x01, 0xe9, 0x41, 0xc3, 0xe7, 0xda, 0x8b,
	0x04, 0xc6, 0x42, 0x85, 0x76, 0x25, 0x81, 0x65, 0x53, 0x64, 0x1f, 0x1a, 0x42, 0x0f, 0x65, 0xcc,
	0x23, 0x76, 0x2e, 0xb9, 0x5d, 0xed, 0x59, 0xfd, 0x9a, 0xdb, 0x14, 0x7a, 0xca, 0x16, 0x39, 0xfa,
	0xd3, 0x82, 0xce, 0x29, 0xfa, 0x2c, 0xe6, 0x4b, 0xf5, 0xe4, 0x55, 0x4e, 0xeb, 0xb3, 0x82, 0xd6,
	0x95, 0xfe, 0xff, 0x48, 0x2d, 0x81, 0x6e, 0x9e, 0xbc, 0x46, 0xaa, 0xa0, 0xfb, 0x01, 0x79, 0xc4,
	0x62, 0xfe, 0x51, 0x5e, 0xcd, 0x44, 0x68, 0x26, 0xb0, 0x0b, 0x35, 0xcd, 0xa3, 0x6b, 0x1e, 0x1d,
	0xfb, 0x73, 0xea, 0xf5, 0x34, 0x9e, 0x0a, 0x23, 0xab, 0x86, 0x49, 0xe7, 0xb1, 0x6f, 0x97, 0x7a,
	0x65, 0x53, 0x4c, 0x63, 0x53, 0xdc, 0x87, 0x86, 0x4a, 0x4f, 0x9b, 0xdc, 0x60, 0xaa, 0xae, 0xec,
	0x36, 0xe7, 0xa9, 0x69, 0x7c, 0x83, 0x9c, 0x6e, 0xc3, 0xfd, 0x95, 0x17, 0x6a, 0xa4, 0x07, 0xd0,
	0x59, 0x5a, 0xe8, 0x8c, 0x49, 0x43, 0x82, 0xcc, 0x27, 0x94, 0x12, 0x48, 0x9e, 0xe9, 0x37, 0x0b,
	0xba, 0xf9, 0x3e, 0x8d, 0xff, 0xe0, 0x9c, 0x4f, 0xa0, 0xe5, 0x5e, 0x85, 0x23, 0x15, 0x04, 0x2c,
	0xf4, 0x8d, 0x16, 0xdb, 0x50, 0x4c, 0xa2, 0x39, 0xc5, 0x45, 0x48, 0x76, 0x32, 0xa3, 0x2e, 0x25,
	0xa5, 0x92, 0xf0, 0x8d, 0xf6, 0xf8, 0x76, 0x7e, 0xc9, 0x33, 0xed, 0x42, 0x3b, 0x7b, 0xa8, 0x46,
	0xfa, 0x1c, 0xea, 0x47, 0x3c, 0x7e, 0xaf, 0x66, 0xf3, 0x71, 0x25, 0x10, 0xeb, 0x16, 0x42, 0xda,
	0x50, 0x12, 0x99, 0x63, 0x69, 0x13, 0x60, 0x01, 0xd0, 0x48, 0x3b, 0xd0, 0x7a, 0xc3, 0xe5, 0x24,
	0xc0, 0xb7, 0x52, 0x70, 0xb3, 0xf6, 0x5d, 0x68, 0x67, 0x13, 0x1a, 0xe9, 0x03, 0xd8, 0x1e, 0xfa,
	0xfe, 0x29, 0x4e, 0xd4, 0x48, 0x85, 0x31, 0x13, 0x21, 0x8f, 0x4c, 0xe3, 0x43, 0xd8, 0x29, 0xa6,
	0x35, 0xd2, 0x16, 0x34, 0x46, 0x52, 0x69, 0x3e, 0xf6, 0x8c, 0x6a, 0x73, 0xad, 0xdc, 0x86, 0x1a,
	0x0f, 0xbf, 0x57, 0xa1, 0x32, 0x34, 0xf7, 0x10, 0x79, 0x07, 0xf5, 0xd9, 0xe2, 0x33, 0x92, 0xbd,
	0x4d, 0xb7, 0xc9, 0xa5, 0xf3, 0x78, 0xf3, 0x65, 0x43, 0x4e, 0xa0, 0x79, 0x95, 0x31, 0x35, 0xe9,
	0xdd, 0xb5, 0xb0, 0xce, 0xfe, 0x1d, 0x1d, 0x1a, 0xc9, 0x19, 0xb4, 0x54, 0xd6, 0xa4, 0xa4, 0x88,
	0x59, 0xdd, 0x1a, 0x87, 0xde, 0xd5, 0x92, 0x92, 0x9d, 0x65, 0xfc, 0xbb, 0x86, 0xec, 0xca, 0x1a,
	0xac, 0x21, 0x5b, 0x58, 0x80, 0x31, 0x40, 0xb4, 0x74, 0x06, 0x29, 0xce, 0x2b, 0xe7, 0x45, 0xe7,
	0xc9, 0xc6, 0xba, 0x46, 0x32, 0x84, 0xea, 0x2c, 0x71, 0x09, 0x71, 0xd6, 0xbd, 0x3b, 0xf5, 0x9b,
	0xb3, 0xfb, 0xdb, 0x5a, 0xca, 0xc8, 0x5f, 0x3a, 0x69, 0x0d, 0xa3, 0x9c, 0xef, 0xd6, 0x30, 0xca,
	0xdb, 0x90, 0x4c, 0xa1, 0xcb, 0x56, 0xfc, 0x46, 0x9e, 0x16, 0x40, 0x6b, 0x9c, 0xea, 0x1c, 0xfc,
	0x41, 0x97, 0x46, 0xf2, 0xd9, 0xfc, 0x05, 0xc6, 0x0c, 0x27, 0x6a, 0xec, 0x9d, 0x24, 0xeb, 0xf8,
	0x77, 0xcf, 0x3f, 0x82, 0x9a, 0x37, 0xdf, 0x04, 0xf2, 0xa8, 0x00, 0xc9, 0xec, 0x8c, 0xb3, 0xb7,
	0xa1, 0xaa, 0xf1, 0x75, 0xe5, 0x53, 0x99, 0xa1, 0x38, 0xaf, 0x26, 0x3f, 0xf2, 0x17, 0xbf, 0x02,
	0x00, 0x00, 0xff, 0xff, 0xb9, 0xfd, 0xc3, 0x79, 0xd7, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AdminClient is the client API for Admin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdminClient interface {
	// 获取配置
	// `hasInput:"false"`
	GetConfig(ctx context.Context, in *GetConfigReq, opts ...grpc.CallOption) (*GetConfigResp, error)
	// 修改配置
	UpdateConfig(ctx context.Context, in *UpdateConfigReq, opts ...grpc.CallOption) (*UpdateConfigResp, error)
	// 服务端插件操作
	OperatePlugin(ctx context.Context, in *OperatePluginReq, opts ...grpc.CallOption) (*OperatePluginResp, error)
	// 服务端插件操作
	GetConfigVal(ctx context.Context, in *GetConfigValReq, opts ...grpc.CallOption) (*GetConfigValResp, error)
	// 向服务端执行一条命令
	RunCommand(ctx context.Context, in *RunCommandReq, opts ...grpc.CallOption) (*RunCommandResp, error)
	// 获取服务端日志
	// `hasInput:"false" hasOutput:"false"`
	GetLog(ctx context.Context, in *GetLogReq, opts ...grpc.CallOption) (*GetLogResp, error)
	// 删除临时文件
	// `hasInput:"false"`
	DelTmpFlie(ctx context.Context, in *DelTmpFlieReq, opts ...grpc.CallOption) (*DelTmpFlieResp, error)
	// 获取上传服务端文件，并注入到容器中
	// `hasInput:"false"`
	AddUpToContainer(ctx context.Context, in *AddUpToContainerReq, opts ...grpc.CallOption) (*AddUpToContainerResp, error)
	// 获取地图信息，并覆盖到对应服务端
	// `hasInput:"false"`
	UpMapToMcServer(ctx context.Context, in *AddUpToContainerReq, opts ...grpc.CallOption) (*AddUpToContainerResp, error)
	// 关闭mcd
	// `hasInput:"false"`
	CloseMcd(ctx context.Context, in *CloseMcdReq, opts ...grpc.CallOption) (*CloseMcdResp, error)
}

type adminClient struct {
	cc grpc.ClientConnInterface
}

func NewAdminClient(cc grpc.ClientConnInterface) AdminClient {
	return &adminClient{cc}
}

func (c *adminClient) GetConfig(ctx context.Context, in *GetConfigReq, opts ...grpc.CallOption) (*GetConfigResp, error) {
	out := new(GetConfigResp)
	err := c.cc.Invoke(ctx, "/most.simple.mcd.Admin/getConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) UpdateConfig(ctx context.Context, in *UpdateConfigReq, opts ...grpc.CallOption) (*UpdateConfigResp, error) {
	out := new(UpdateConfigResp)
	err := c.cc.Invoke(ctx, "/most.simple.mcd.Admin/updateConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) OperatePlugin(ctx context.Context, in *OperatePluginReq, opts ...grpc.CallOption) (*OperatePluginResp, error) {
	out := new(OperatePluginResp)
	err := c.cc.Invoke(ctx, "/most.simple.mcd.Admin/operatePlugin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) GetConfigVal(ctx context.Context, in *GetConfigValReq, opts ...grpc.CallOption) (*GetConfigValResp, error) {
	out := new(GetConfigValResp)
	err := c.cc.Invoke(ctx, "/most.simple.mcd.Admin/getConfigVal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) RunCommand(ctx context.Context, in *RunCommandReq, opts ...grpc.CallOption) (*RunCommandResp, error) {
	out := new(RunCommandResp)
	err := c.cc.Invoke(ctx, "/most.simple.mcd.Admin/runCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) GetLog(ctx context.Context, in *GetLogReq, opts ...grpc.CallOption) (*GetLogResp, error) {
	out := new(GetLogResp)
	err := c.cc.Invoke(ctx, "/most.simple.mcd.Admin/getLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) DelTmpFlie(ctx context.Context, in *DelTmpFlieReq, opts ...grpc.CallOption) (*DelTmpFlieResp, error) {
	out := new(DelTmpFlieResp)
	err := c.cc.Invoke(ctx, "/most.simple.mcd.Admin/delTmpFlie", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) AddUpToContainer(ctx context.Context, in *AddUpToContainerReq, opts ...grpc.CallOption) (*AddUpToContainerResp, error) {
	out := new(AddUpToContainerResp)
	err := c.cc.Invoke(ctx, "/most.simple.mcd.Admin/addUpToContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) UpMapToMcServer(ctx context.Context, in *AddUpToContainerReq, opts ...grpc.CallOption) (*AddUpToContainerResp, error) {
	out := new(AddUpToContainerResp)
	err := c.cc.Invoke(ctx, "/most.simple.mcd.Admin/UpMapToMcServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) CloseMcd(ctx context.Context, in *CloseMcdReq, opts ...grpc.CallOption) (*CloseMcdResp, error) {
	out := new(CloseMcdResp)
	err := c.cc.Invoke(ctx, "/most.simple.mcd.Admin/closeMcd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdminServer is the server API for Admin service.
type AdminServer interface {
	// 获取配置
	// `hasInput:"false"`
	GetConfig(context.Context, *GetConfigReq) (*GetConfigResp, error)
	// 修改配置
	UpdateConfig(context.Context, *UpdateConfigReq) (*UpdateConfigResp, error)
	// 服务端插件操作
	OperatePlugin(context.Context, *OperatePluginReq) (*OperatePluginResp, error)
	// 服务端插件操作
	GetConfigVal(context.Context, *GetConfigValReq) (*GetConfigValResp, error)
	// 向服务端执行一条命令
	RunCommand(context.Context, *RunCommandReq) (*RunCommandResp, error)
	// 获取服务端日志
	// `hasInput:"false" hasOutput:"false"`
	GetLog(context.Context, *GetLogReq) (*GetLogResp, error)
	// 删除临时文件
	// `hasInput:"false"`
	DelTmpFlie(context.Context, *DelTmpFlieReq) (*DelTmpFlieResp, error)
	// 获取上传服务端文件，并注入到容器中
	// `hasInput:"false"`
	AddUpToContainer(context.Context, *AddUpToContainerReq) (*AddUpToContainerResp, error)
	// 获取地图信息，并覆盖到对应服务端
	// `hasInput:"false"`
	UpMapToMcServer(context.Context, *AddUpToContainerReq) (*AddUpToContainerResp, error)
	// 关闭mcd
	// `hasInput:"false"`
	CloseMcd(context.Context, *CloseMcdReq) (*CloseMcdResp, error)
}

// UnimplementedAdminServer can be embedded to have forward compatible implementations.
type UnimplementedAdminServer struct {
}

func (*UnimplementedAdminServer) GetConfig(ctx context.Context, req *GetConfigReq) (*GetConfigResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfig not implemented")
}
func (*UnimplementedAdminServer) UpdateConfig(ctx context.Context, req *UpdateConfigReq) (*UpdateConfigResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateConfig not implemented")
}
func (*UnimplementedAdminServer) OperatePlugin(ctx context.Context, req *OperatePluginReq) (*OperatePluginResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OperatePlugin not implemented")
}
func (*UnimplementedAdminServer) GetConfigVal(ctx context.Context, req *GetConfigValReq) (*GetConfigValResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfigVal not implemented")
}
func (*UnimplementedAdminServer) RunCommand(ctx context.Context, req *RunCommandReq) (*RunCommandResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RunCommand not implemented")
}
func (*UnimplementedAdminServer) GetLog(ctx context.Context, req *GetLogReq) (*GetLogResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLog not implemented")
}
func (*UnimplementedAdminServer) DelTmpFlie(ctx context.Context, req *DelTmpFlieReq) (*DelTmpFlieResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelTmpFlie not implemented")
}
func (*UnimplementedAdminServer) AddUpToContainer(ctx context.Context, req *AddUpToContainerReq) (*AddUpToContainerResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUpToContainer not implemented")
}
func (*UnimplementedAdminServer) UpMapToMcServer(ctx context.Context, req *AddUpToContainerReq) (*AddUpToContainerResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpMapToMcServer not implemented")
}
func (*UnimplementedAdminServer) CloseMcd(ctx context.Context, req *CloseMcdReq) (*CloseMcdResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CloseMcd not implemented")
}

func RegisterAdminServer(s *grpc.Server, srv AdminServer) {
	s.RegisterService(&_Admin_serviceDesc, srv)
}

func _Admin_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConfigReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/most.simple.mcd.Admin/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).GetConfig(ctx, req.(*GetConfigReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_UpdateConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateConfigReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).UpdateConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/most.simple.mcd.Admin/UpdateConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).UpdateConfig(ctx, req.(*UpdateConfigReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_OperatePlugin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OperatePluginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).OperatePlugin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/most.simple.mcd.Admin/OperatePlugin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).OperatePlugin(ctx, req.(*OperatePluginReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_GetConfigVal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConfigValReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).GetConfigVal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/most.simple.mcd.Admin/GetConfigVal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).GetConfigVal(ctx, req.(*GetConfigValReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_RunCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunCommandReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).RunCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/most.simple.mcd.Admin/RunCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).RunCommand(ctx, req.(*RunCommandReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_GetLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLogReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).GetLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/most.simple.mcd.Admin/GetLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).GetLog(ctx, req.(*GetLogReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_DelTmpFlie_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelTmpFlieReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).DelTmpFlie(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/most.simple.mcd.Admin/DelTmpFlie",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).DelTmpFlie(ctx, req.(*DelTmpFlieReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_AddUpToContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUpToContainerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).AddUpToContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/most.simple.mcd.Admin/AddUpToContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).AddUpToContainer(ctx, req.(*AddUpToContainerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_UpMapToMcServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUpToContainerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).UpMapToMcServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/most.simple.mcd.Admin/UpMapToMcServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).UpMapToMcServer(ctx, req.(*AddUpToContainerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_CloseMcd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseMcdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).CloseMcd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/most.simple.mcd.Admin/CloseMcd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).CloseMcd(ctx, req.(*CloseMcdReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Admin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "most.simple.mcd.Admin",
	HandlerType: (*AdminServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getConfig",
			Handler:    _Admin_GetConfig_Handler,
		},
		{
			MethodName: "updateConfig",
			Handler:    _Admin_UpdateConfig_Handler,
		},
		{
			MethodName: "operatePlugin",
			Handler:    _Admin_OperatePlugin_Handler,
		},
		{
			MethodName: "getConfigVal",
			Handler:    _Admin_GetConfigVal_Handler,
		},
		{
			MethodName: "runCommand",
			Handler:    _Admin_RunCommand_Handler,
		},
		{
			MethodName: "getLog",
			Handler:    _Admin_GetLog_Handler,
		},
		{
			MethodName: "delTmpFlie",
			Handler:    _Admin_DelTmpFlie_Handler,
		},
		{
			MethodName: "addUpToContainer",
			Handler:    _Admin_AddUpToContainer_Handler,
		},
		{
			MethodName: "UpMapToMcServer",
			Handler:    _Admin_UpMapToMcServer_Handler,
		},
		{
			MethodName: "closeMcd",
			Handler:    _Admin_CloseMcd_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "admin.proto",
}
