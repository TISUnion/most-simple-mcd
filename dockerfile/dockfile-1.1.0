FROM debian:buster

ENV SMCD_DIR /data/app
# 设置工作目录
WORKDIR $SMCD_DIR

ENV SMCD_VERSION 1.1.0

#部署环境
    #修改阿里源
RUN sed -i "s/deb.debian.org/mirrors.aliyun.com/g" /etc/apt/sources.list \
    && sed -i "s/security.debian.org/mirrors.aliyun.com/g" /etc/apt/sources.list \
    #安装依赖
    && apt-get update \
    && apt-get install -y --no-install-recommends g++ gcc libc6-dev make pkg-config xz-utils tar git python curl ca-certificates \
    #更新证书
    && update-ca-certificates \
    #下载并解压node
    && curl -O https://nodejs.org/dist/v14.12.0/node-v14.12.0-linux-x64.tar.xz \
    && xz -d node-v14.12.0-linux-x64.tar.xz \
    && tar xf node-v14.12.0-linux-x64.tar \
    && rm node-v14.12.0-linux-x64.tar \
    && mv node-v14.12.0-linux-x64 /node \

    #下载并解压golang
    && curl -O https://dl.google.com/go/go1.14.10.linux-amd64.tar.gz \
    && tar xzf go1.14.10.linux-amd64.tar.gz \
    && rm go1.14.10.linux-amd64.tar.gz \
    && mv go /go \
    && rm -rf /var/lib/apt/lists/*

ENV GOROOT /go
ENV GOPATH $SMCD_DIR/golang
ENV GOPROXY https://mirrors.aliyun.com/goproxy/
ENV PATH /node/bin:$GOROOT/bin:$PATH

#创建golang目录
RUN mkdir -p $GOPATH/src $GOPATH/bin

WORKDIR $GOPATH/src

#下载并编译smcd
RUN git clone https://github.com/TISUnion/most-simple-mcd.git \
    && cd most-simple-mcd \
    && git submodule init \
    && git submodule update \
    && /bin/bash build.sh

EXPOSE 80 25565

WORKDIR $GOPATH/src/most-simple-mcd

#运行smcd
ENTRYPOINT ["sh", "-c", "./main"]


